{"version":3,"sources":["api/constants.js","api/makeFitb.js","api/select.js","api/selectFitbs.js","api/slugify.js","api/makeTag.js","api/selectTags.js","api/tagAll.js","components/Filters/Filters.js","components/Filters/FiltersWithRouter.js","components/Checkbox/Checkbox.js","constants.js","FillInTheBlanks/reducer.js","components/InputText/InputText.js","FillInTheBlanks/makeInitialState.js","FillInTheBlanks/Content.js","FillInTheBlanks/FillInTheBlanks.js","App.js","serviceWorker.js","index.js"],"names":["ACTIVE","ASC","AUTHOR","DESC","EXAMPLES","FITB","FITBS","ID","NAME","PROMPTS","STATUS","TAGS","makeFitb","record","examples","get","JSON","parse","undefined","prompts","author","id","source","tags","process","API_KEY","REACT_APP_AIRTABLE_API_KEY","APP_ID","REACT_APP_AIRTABLE_APP_ID","select","result","callback","map","options","tableName","Airtable","apiKey","base","eachPage","records","fetchNextPage","error","selectFitbs","filterByFormula","sort","field","direction","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","makeTag","name","fitbs","slug","selectTags","ALL","tagAll","Item","counter","filter","onClick","tag","className","to","classnames","data-testid","type","Filters","counters","reduce","accumulator","current","forEach","length","key","FiltersWithRouter","Child","useParams","find","path","children","values","off","on","Checkbox","onChange","value","checked","htmlFor","BLANK","SEPARATOR","modes","blanks","input","CHANGE","reducer","state","action","copy","InputText","dispatch","hint","inputClassName","classname","target","placeholder","placeholderIsMinWidth","makeInitialState","match","index","Content","fitb","mode","useReducer","getValues","parts","slice","part","push","element","interpolate","FillInTheBlanks","useState","setMode","App","setError","setFilter","setFitbs","setTags","waiting","setWaiting","useEffect","icon","faCircleNotch","spin","stringify","includes","version","Boolean","window","location","hostname","NODE_ENV","REACT_APP_AMPLITUDE_KEY","ReactDOM","render","amplitudeInstance","amplitude","getInstance","logEvent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3af9e1e.chunk.js","sourcesContent":["export const ACTIVE = 'active';\nexport const ASC = 'asc';\nexport const AUTHOR = 'Author';\nexport const DESC = 'desc';\nexport const EXAMPLES = 'Examples';\nexport const FITB = 'FITB';\nexport const FITBS = 'FITBs';\nexport const ID = 'ID';\nexport const NAME = 'Name';\nexport const PROMPTS = 'Prompts';\nexport const STATUS = 'Status';\nexport const TAGS = 'Tags';\n","import { AUTHOR, EXAMPLES, FITB, PROMPTS, TAGS } from './constants';\n\nfunction makeFitb(record) {\n  const examples = record.get(EXAMPLES)\n    ? JSON.parse(record.get(EXAMPLES))\n    : undefined;\n  const prompts = record.get(PROMPTS)\n    ? JSON.parse(record.get(PROMPTS))\n    : undefined;\n  return {\n    author: record.get(AUTHOR),\n    examples: examples,\n    id: record.id, // INFO .id and not .get('ID')\n    prompts: prompts,\n    source: record.get(FITB),\n    tags: record.get(TAGS)\n  };\n}\n\nexport default makeFitb;\n","import Airtable from 'airtable';\n\nconst {\n  REACT_APP_AIRTABLE_API_KEY: API_KEY,\n  REACT_APP_AIRTABLE_APP_ID: APP_ID\n} = process.env;\n\nfunction select({ callback, map, options, tableName }) {\n  const base = new Airtable({ apiKey: API_KEY }).base(APP_ID);\n  let result;\n  base(tableName)\n    .select(options)\n    .eachPage(\n      function page(records, fetchNextPage) {\n        result = records.map(map);\n        fetchNextPage();\n      },\n      function done(error) {\n        callback(error, result);\n      }\n    );\n}\n\nexport default select;\n","import { ACTIVE, DESC, FITBS, ID, STATUS } from './constants';\nimport makeFitb from './makeFitb';\nimport select from './select';\n\nfunction selectFitbs(callback) {\n  select({\n    callback,\n    map: makeFitb,\n    options: {\n      filterByFormula: `${STATUS}=\"${ACTIVE}\"`,\n      sort: [{ field: ID, direction: DESC }]\n    },\n    tableName: FITBS\n  });\n}\n\nexport default selectFitbs;\n","// CREDIT: https://gist.github.com/hagemann/382adfc57adbd5af078dc93feef01fe1\nfunction slugify(string) {\n  const a =\n    'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;';\n  const b =\n    'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with 'and'\n    .replace(/[^\\w-]+/g, '') // Remove all non-word characters\n    .replace(/--+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n\nexport default slugify;\n","import { FITBS, NAME } from './constants';\nimport slugify from './slugify';\n\nfunction makeTag(record) {\n  const name = record.get(NAME);\n  const tag = {\n    fitbs: record.get(FITBS),\n    id: record.id,\n    name: name,\n    slug: slugify(name)\n  };\n  return tag;\n}\n\nexport default makeTag;\n","import { ASC, NAME, TAGS } from './constants';\nimport makeTag from './makeTag';\nimport select from './select';\n\nfunction selectTags(callback) {\n  select({\n    callback,\n    map: makeTag,\n    options: {\n      sort: [{ field: NAME, direction: ASC }]\n    },\n    tableName: TAGS\n  });\n}\n\nexport default selectTags;\n","export const ALL = 'all';\n\nconst tagAll = { name: ALL, slug: ALL };\n\nexport default tagAll;\n","import classnames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport tagAll from '../../api/tagAll';\n\nfunction Item({ counter, filter, onClick, tag }) {\n  return (\n    <li className=\"mx-1 my-1\">\n      <Link to={tag.slug}>\n        <button\n          className={classnames(\n            'focus:outline-none hover:bg-blue-700 px-4 rounded-full text-white',\n            {\n              'bg-blue-500': tag.name !== filter.name,\n              'bg-blue-900': tag.name === filter.name\n            }\n          )}\n          data-testid={tag.name}\n          onClick={() => onClick(tag)}\n          type=\"button\"\n        >\n          {`${tag.name} (${counter})`}\n        </button>\n      </Link>\n    </li>\n  );\n}\n\nfunction Filters({ filter, fitbs, onClick, tags }) {\n  const counters = fitbs.reduce((accumulator, current) => {\n    current.tags.forEach(tag => {\n      if (accumulator[tag]) {\n        accumulator[tag] += 1;\n      } else {\n        accumulator[tag] = 1;\n      }\n    });\n    return accumulator;\n  }, {});\n\n  return (\n    <ul className=\"border-b-2 flex flex-wrap\">\n      <Item\n        counter={fitbs.length}\n        filter={filter}\n        onClick={onClick}\n        tag={tagAll}\n      />\n      {tags.map(tag => (\n        <Item\n          counter={counters[tag.id]}\n          filter={filter}\n          key={tag.id}\n          onClick={onClick}\n          tag={tag}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  useParams\n} from 'react-router-dom';\nimport Filters from './Filters';\n\nfunction FiltersWithRouter({ filter, fitbs, onClick, tags }) {\n  function Child() {\n    const { id } = useParams();\n    const tag = tags.find(tag => tag.slug === id);\n    if (tag && filter !== tag) {\n      onClick(tag);\n    }\n    return (\n      <Filters filter={filter} fitbs={fitbs} onClick={onClick} tags={tags} />\n    );\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:id\" children={<Child />} />\n        <Route path=\"/\" children={<Child />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default FiltersWithRouter;\n","import classnames from 'classnames';\nimport React from 'react';\n\nexport const values = {\n  off: 'off',\n  on: 'on'\n};\n\nfunction Checkbox({ id, onChange, value }) {\n  return (\n    <span className=\"inline-block ml-3 relative\">\n      <input\n        checked={value === values.on}\n        className=\"hidden\"\n        data-testid={id}\n        id={id}\n        onChange={() => onChange(value)}\n        type=\"checkbox\"\n      />\n      <label className=\"cursor-pointer\" htmlFor={id}>\n        <div className=\"w-6 h-3 bg-gray-400 rounded-full shadow-inner\" />\n        <div\n          className={classnames(\n            'toggle__dot absolute w-4 h-4 bg-gray-300 rounded-full shadow inset-y-0 left-0',\n            { 'toggle__dot--checked': value === values.on }\n          )}\n        />\n      </label>\n    </span>\n  );\n}\n\nexport default Checkbox;\n","export const BLANK = '________________';\nexport const SEPARATOR = '__BLANK__';\n\nexport const modes = {\n  blanks: 'blanks',\n  examples: 'examples',\n  input: 'input',\n  prompts: 'prompts'\n};\n","export const CHANGE = 'change';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case CHANGE: {\n      const copy = { ...state };\n      copy[action.value.id] = action.value.value;\n      return copy;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import classname from 'classnames';\nimport React from 'react';\nimport AutosizeInput from 'react-input-autosize';\nimport { BLANK } from '../../constants';\nimport { CHANGE } from '../../FillInTheBlanks/reducer';\n\nfunction InputText({ dispatch, hint, id, value }) {\n  function onChange({ target: { value } }) {\n    dispatch({ type: CHANGE, value: { id, value: value } });\n  }\n\n  return (\n    <span className=\"inline-flex flex-col leading-none\">\n      <AutosizeInput\n        data-testid=\"input\"\n        inputClassName={classname({ 'bg-purple-100': value.length > 0 })}\n        onChange={onChange}\n        placeholder={BLANK}\n        placeholderIsMinWidth={true}\n        value={value}\n      />\n      {hint !== BLANK && <label className=\"self-center text-sm\">{hint}</label>}\n    </span>\n  );\n}\n\nexport default InputText;\n","function makeInitialState(source) {\n  const initialState = source\n    .match(/__BLANK__/g)\n    .reduce((accumulator, current, index) => {\n      accumulator[index] = '';\n      return accumulator;\n    }, {});\n  return initialState;\n}\n\nexport default makeInitialState;\n","import classnames from 'classnames';\nimport React, { useReducer } from 'react';\nimport InputText from '../components/InputText/InputText';\nimport { BLANK, SEPARATOR, modes } from '../constants';\nimport makeInitialState from './makeInitialState';\nimport reducer from './reducer';\n\nfunction getValues(mode, { examples, prompts, source }) {\n  let values = [];\n  const blanks = source.match(/__BLANK__/g).map(() => BLANK); // INFO: not sure if I can interpolate inside a regex\n  switch (mode) {\n    case modes.blanks:\n    default:\n      values = blanks;\n      break;\n    case modes.examples:\n      values = examples;\n      break;\n    case modes.input:\n      if (prompts) {\n        values = prompts;\n      } else {\n        values = blanks;\n      }\n      break;\n    case modes.prompts:\n      values = prompts;\n      break;\n  }\n  return values;\n}\n\nfunction interpolate({ dispatch, mode, source, state, values }) {\n  const text = source.slice();\n  const parts = text.split(SEPARATOR);\n  const result = [];\n  parts.forEach((part, index) => {\n    result.push(part);\n    if (values[index]) {\n      let element;\n      if (mode === modes.input) {\n        const hint = values[index];\n        element = (\n          <InputText\n            dispatch={dispatch}\n            hint={hint}\n            id={index}\n            key={index}\n            value={state[index]}\n          />\n        );\n      } else {\n        element = (\n          <span\n            className={classnames({\n              'bg-yellow-200': mode === modes.blanks,\n              'bg-green-200': mode === modes.examples,\n              'bg-blue-200': mode === modes.prompts\n            })}\n            key={index}\n          >\n            {values[index]}\n          </span>\n        );\n      }\n      result.push(element);\n    }\n  });\n  return result;\n}\n\nfunction Content({ fitb, mode }) {\n  const [state, dispatch] = useReducer(reducer, makeInitialState(fitb.source));\n  const values = getValues(mode, fitb);\n  return interpolate({ dispatch, mode, source: fitb.source, state, values });\n}\n\nexport default Content;\n","import React, { useState } from 'react';\nimport Checkbox, { values } from '../components/Checkbox/Checkbox';\nimport { modes } from '../constants';\nimport Content from './Content';\n\nfunction FillInTheBlanks({ fitb }) {\n  const [mode, setMode] = useState(modes.input);\n\n  return (\n    <div className=\"leading-loose text-lg py-6 border-b border-gray-500\">\n      <Content mode={mode} fitb={fitb} />\n      {fitb.examples && (\n        <Checkbox\n          id={fitb.id}\n          onChange={value => {\n            if (value === values.off) {\n              setMode(modes.examples);\n            }\n            if (value === values.on) {\n              setMode(modes.input);\n            }\n          }}\n          value={mode === modes.examples ? values.on : values.off}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default FillInTheBlanks;\n","import { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport { version } from '../package.json';\nimport selectFitbs from './api/selectFitbs';\nimport selectTags from './api/selectTags';\nimport tagAll, { ALL } from './api/tagAll';\nimport FiltersWithRouter from './components/Filters/FiltersWithRouter';\nimport FillInTheBlanks from './FillInTheBlanks/FillInTheBlanks';\n\nfunction App() {\n  const [error, setError] = useState();\n  const [filter, setFilter] = useState(tagAll);\n  const [fitbs, setFitbs] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [waiting, setWaiting] = useState(true);\n\n  useEffect(() => {\n    selectFitbs((error, fitbs) => {\n      if (error) {\n        setError(error);\n      } else {\n        setFitbs(fitbs);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    selectTags((error, tags) => {\n      if (error) {\n        setError(error);\n      } else {\n        setTags(tags);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setWaiting(false);\n    }\n    if (fitbs.length > 0 && tags.length > 0) {\n      setWaiting(false);\n    }\n  }, [error, fitbs.length, tags.length]);\n\n  return (\n    <div className=\"flex flex-col font-serif items-center max-w-4xl mx-16 sm:mx-32 md:mx-32 lg:mx-32 xl:mx-auto\">\n      <h1 className=\"font-bold text-4xl text-gray-900\">TeamPrompts</h1>\n      {waiting ? (\n        <FontAwesomeIcon\n          className=\"text-4xl\"\n          icon={faCircleNotch}\n          spin={true}\n        />\n      ) : error ? (\n        <pre>{JSON.stringify(error, 0, 2)}</pre>\n      ) : (\n        <>\n          <FiltersWithRouter\n            filter={filter}\n            fitbs={fitbs}\n            onClick={tag => setFilter(tag)}\n            tags={tags}\n          />\n          <ul>\n            {fitbs\n              .filter(fitb => {\n                if (filter.name === ALL) {\n                  return fitb;\n                }\n                if (filter.fitbs.includes(fitb.id)) {\n                  return fitb;\n                }\n                return null;\n              })\n              .map(fitb => {\n                return (\n                  <li key={fitb.id}>\n                    <FillInTheBlanks fitb={fitb} />\n                  </li>\n                );\n              })}\n          </ul>\n        </>\n      )}\n      <small className=\"font-normal text-gray-700 text-sm\">v{version}</small>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { name, version } from '../package.json';\nimport './styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst { NODE_ENV, REACT_APP_AMPLITUDE_KEY } = process.env;\n\nReactDOM.render(\n  <AmplitudeProvider\n    amplitudeInstance={amplitude.getInstance()}\n    apiKey={REACT_APP_AMPLITUDE_KEY}\n  >\n    <Amplitude>\n      {({ logEvent }) => {\n        // INFO: https://github.com/amplitude/react-amplitude#amplitude-props\n        logEvent(`hello ${name} v${version} ${NODE_ENV}`); // TODO: move to constants\n        return <App />;\n      }}\n    </Amplitude>\n  </AmplitudeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}